/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESCAPE      &kp N1  &kp N2        &kp N3    &kp N4  &kp N5       &kp N6      &kp N7  &kp N8     &kp N9         &kp N0    &kp BACKSPACE
  &kp TAB         &kp Q   &kp W         &kp E     &kp R   &kp T        &kp Y       &kp U   &kp I      &kp O          &kp P     &kp LBKT
  &kp LCTRL       &kp A   &kp S         &kp D     &kp F   &kp G        &kp H       &kp J   &kp K      &kp L          &kp SEMI  &kp SQT
  &kp LEFT_SHIFT  &kp Z   &kp X         &kp C     &kp V   &kp B        &kp N       &kp M   &kp COMMA  &kp DOT        &kp FSLH  &kp RIGHT_SHIFT
                          &kp LEFT_ALT  &kp LCMD  &sl 1   &kp SPACE    &kp RETURN  &sl 2   &kp RCMD   &kp RIGHT_ALT
            >;
        };

        lower_layer {
            bindings = <
  &kp GRAVE       &trans     &trans     &trans    &trans    &trans              &trans             &trans    &trans    &trans    &trans         &kp MINUS
  &kp UNDER       &kp F1     &kp F2     &kp F3    &kp F4    &kp F5              &kp F6             &kp F7    &kp F8    &kp F9    &kp F10        &kp F11
  &mt LCTRL PLUS  &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET          &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR       &mt RCTRL MINUS
  &trans          &kp EQUAL  &kp MINUS  &kp N3    &kp N4    &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp N7    &kp N8    &kp N9    &kp BACKSLASH  &trans
                             &trans     &trans    &trans    &trans              &trans             &sl 3     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
  &kp TILDE        &trans           &trans     &trans     &trans     &trans          &trans        &trans    &trans            &trans     &trans           &trans
  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp UP_ARROW      &kp PG_UP  &kp SLCK         &kp CAPS
  &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp DOWN_ARROW    &kp RIGHT  &kp INS          &mt RCTRL K_APP
  &trans           &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp K_PLAY_PAUSE  &kp PG_DN  &kp PAUSE_BREAK  &trans
                                    &trans     &trans     &trans     &lt 3 RET       &lt 3 ESC     &trans    &trans            &trans
            >;
        };

        adjust_layer {
            bindings = <
  &none  &none  &none  &none  &none  &none               &none              &none           &none             &none       &none   &none
  &none  &none  &none  &none  &none  &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &none           &kp EXCLAMATION   &none       &none   &none
  &none  &none  &none  &none  &none  &none               &trans             &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &trans  &trans
  &none  &none  &none  &none  &none  &none               &none              &none           &none             &none       &none   &none
                &none  &none  &none  &none               &none              &none           &none             &none
            >;
        };
    };
};
